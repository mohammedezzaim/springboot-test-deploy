openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'https'
paths:
  /etatCommandes:
    get:
      summary: List all etatCommandes
      operationId: listEtatCommandes
      tags:
        - etatCommandes
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of etatCommandes
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/EtatCommandes'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a etatCommande
      operationId: createEtatCommandes
      tags:
        - etatCommandes
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /etatCommandes/{etatCommandeId}:
    get:
      summary: Info for a specific etatCommande
      operationId: showEtatCommandeById
      tags:
        - etatCommandes
      parameters:
        - name: etatCommandeId
          in: path
          required: true
          description: The id of the etatCommande to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/EtatCommandes'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /commandes:
    get:
      summary: List all commandes
      operationId: listCommandes
      tags:
        - commandes
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of commandes
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Commandes'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a commande
      operationId: createCommandes
      tags:
        - commandes
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /commandes/{commandeId}:
    get:
      summary: Info for a specific commande
      operationId: showCommandeById
      tags:
        - commandes
      parameters:
        - name: commandeId
          in: path
          required: true
          description: The id of the commande to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Commandes'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /commandeItems:
    get:
      summary: List all commandeItems
      operationId: listCommandeItems
      tags:
        - commandeItems
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of commandeItems
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/CommandeItems'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a commandeItem
      operationId: createCommandeItems
      tags:
        - commandeItems
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /commandeItems/{commandeItemId}:
    get:
      summary: Info for a specific commandeItem
      operationId: showCommandeItemById
      tags:
        - commandeItems
      parameters:
        - name: commandeItemId
          in: path
          required: true
          description: The id of the commandeItem to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/CommandeItems'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  


definitions:
  EtatCommande:
    type: "object"
    required:
      - id
      - libelle
      - code
      - style
      - description
    properties:
      id:
        type: int
      libelle:
        type: string
      code:
        type: string
      style:
        type: string
      description:
        type: string
  EtatCommandes:
    type: array
    items:
      $ref: '#/definitions/EtatCommande'
  Commande:
    type: "object"
    required:
      - id
      - code
      - total
      - totalPayer
      - dateCommande
    properties:
      id:
        type: int
      code:
        type: string
      total:
        type: number
      totalPayer:
        type: number
      dateCommande:
        type: date
  Commandes:
    type: array
    items:
      $ref: '#/definitions/Commande'
  CommandeItem:
    type: "object"
    required:
      - id
      - prix
      - quantite
    properties:
      id:
        type: int
      prix:
        type: number
      quantite:
        type: number
  CommandeItems:
    type: array
    items:
      $ref: '#/definitions/CommandeItem'

  Error:
    type: "object"
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
